{
  "openapi": "3.0.2",
  "info": {
    "title": "IU7 WEB API",
    "version": "1.0"
  },
  "servers": [
    { "url": "http://localhost:8081/" },
    { "url": "http://localhost:8081/mirror1" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },

    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["login", "password"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "uuid"
          },
          "login": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "description": "User rating"
          },
          "role": {
            "type": "integer",
            "enum": [0, 1],
            "description": "User role: 0 - admin, 1 - default user"
          }
        }
      },
      "Advertisement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "uuid"
          },
          "description": {
            "type": "string"
          },
          "isApproved": {
            "type": "boolean",
            "description": "is adv approved by admin"
          },
          "cost": {
            "type": "number"
          },
          "score": {
            "type": "number",
            "description": "Rating of advertisement"
          },
          "address": {
            "type": "string"
          },
          "ownerId": {
            "type": "string",
            "description": "uuid"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "Endpoints for getting and working with users"
    },
    {
      "name": "Listings",
      "description": "Endpoints for getting and working with advertisements"
    },
    {
      "name": "Rents",
      "description": "Endpoints for getting and working with rents"
    }
  ],
  "paths": {
    "/api/v1/user/getUser": {
      "get": {
        "summary": "Returns user object by his login",
        "tags": ["User"],
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "description": "User login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "valid response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/login": {
      "post": {
        "summary": "Get JWT token by login",
        "tags": ["User"],
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "valid response",
            "content": {
              "application/json": {
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJiZGFlZDU3Zi1kMjhkLTQ4ZTctYjQ0ZS1hMzY2YzNkZDAyZDkiLCJpYXQiOjE2OTgxNTkwNTksImV4cCI6MTY5ODE4Nzg1OX0.XHTw_EHXuO3kI0D3IofcUr50nxuhaxegmylo-WHG1RQ"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/user/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Creates user struct with given login and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "valid response",
            "content": {
              "application/json": {
                "example": {
                  "userId": "bdaed57f-d28d-48e7-b44e-a366c3dd02d9"
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/user/getUserById": {
      "get": {
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "User uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "valid response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not found or invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/user/validateToken": {
      "get": {
        "summary": "Validate user token",
        "tags": ["User"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid"
          },
          "400": {
            "description": "Invalid response"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },

    "/api/v1/listing/createAdvertisement": {
      "post": {
        "tags": ["Listings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Advertisement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adId": {
                      "type": "string",
                      "description": "uuid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is not authorised"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/listing/getAdvertisement": {
      "get": {
        "tags": ["Listings"],
        "parameters": [
          {
            "name": "adId",
            "in": "query",
            "description": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "valid response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Advertisement"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ownerId": {
                          "type": "string"
                        },
                        "login": {
                          "type": "string"
                        },
                        "ownerScore": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/listing/getUsersAdvertisements": {
      "get": {
        "tags": ["Listings"],
        "summary": "Get advertisements by owner ID",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Advertisements found",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "123",
                    "description": "Sample advertisement 1",
                    "address": "123 Main St",
                    "cost": 100
                  },
                  {
                    "id": "124",
                    "description": "Sample advertisement 2",
                    "address": "456 Elm St",
                    "cost": 150
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/listing/createRent": {
      "post": {
        "tags": ["Rents"],
        "summary": "Create a new rent",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "date"
                  },
                  "to": {
                    "type": "string",
                    "format": "date"
                  },
                  "adId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["from", "to", "adId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rent created successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/listing/approveAd": {
      "patch": {
        "tags": ["Listings"],
        "summary": "Approve an advertisement",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "adId": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Advertisement approved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/listing/deleteAd": {
      "delete": {
        "tags": ["Listings"],
        "summary": "Delete an advertisement",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "adId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Advertisement deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/listing/searchAds": {
      "get": {
        "tags": ["Listings"],
        "summary": "Search for advertisements",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "123",
                    "description": "Sample advertisement 1",
                    "address": "123 Main St",
                    "cost": 100
                  },
                  {
                    "id": "124",
                    "description": "Sample advertisement 2",
                    "address": "456 Elm St",
                    "cost": 150
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/listing/getAdvertisementRentDates": {
      "get": {
        "tags": ["Listings", "Rents"],
        "summary": "Get rent dates for an advertisement",
        "parameters": [
          {
            "name": "adId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rent dates found",
            "content": {
              "application/json": {
                "example": ["2023-10-25", "2023-10-26"]
              }
            }
          },
          "404": {
            "description": "Advertisement not found"
          }
        }
      }
    },
    "/api/v1/listing/getUsersRents": {
      "get": {
        "tags": ["User", "Rents"],
        "summary": "Get rents by user ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rents found",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "123",
                    "from": "2023-10-25",
                    "to": "2023-10-26"
                  },
                  {
                    "id": "124",
                    "from": "2023-10-28",
                    "to": "2023-10-29"
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}
